resources:
  repositories:
    - repository: templates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master
      endpoint: hmcts
      
trigger:
  - none

pool:
  vmImage: 'ubuntu-latest'

################################################
# Terraform Plan Dev. ##########################

stages:
  - stage: 'Terraform_Plan_Dev'
    displayName: 'Terraform Plan Dev'
    jobs: 
    - job: 'Terraform_Plan_Dev'
      displayName: 'Terraform Plan Dev'
      variables:
      - group: vh-tenant-creds
      - name: environment
        value: DEV
      - name: tfversion
        value: 1.9.0
      - group: external
      - template: pipeline-steps/ado-vars.yaml
        # If another project comes along and wants to use the same pipeline file then make this a variable in the UI
        # but it might be better to template the pipeline more and have a different pipeline file
        # so that someone doesn't pick the wrong var in the dropdown
      - name: project
        value: application
      # same comment as above ^^
      - name: serviceConnection
        value: DTS-SHAREDSERVICES-DEV-Video Hearings #OPS-APPROVAL-GATE-${{ parameters.env }}-ENVS
      steps:
      - template: pipeline-steps/vh-tenant-replacement.yaml

      - template: pipeline-steps/ado-vars-to-tf.yaml
        parameters: 
          environment: $(environment)

      - template: pipeline-steps/deploy-service-elevated.yaml
        parameters:
          environment: $(environment)
          location: 'UK South'
          stack: '09-video-hearing-core'
          project: $(project)
          product: 'vh'
          builtFrom: $(Build.Repository.Name)
          tfversion: $(tfversion)
          serviceConnection: $(serviceConnection)
          activity_name: Video_Hearing_Core
          #run_stage: ${{ parameters.Run_Stage }}
          state_sub: $(vh_tf_state_sub)
          additional_tf_var: $(ado_vars_to_tf.ado_vars)