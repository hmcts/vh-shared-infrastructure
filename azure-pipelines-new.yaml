resources:
  repositories:
    - repository: templates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master
      endpoint: hmcts
      
name: VH Shared Services AKS Azure Infrastructure Deployment Pipeline
trigger:
  - none

variables:
  - name: gaServiceConnection
    value: DTS-SHAREDSERVICES-${{ parameters.env }}-Video Hearings
  - name: tfversion
    value: 1.1.0
  # If another project comes along and wants to use the same pipeline file then make this a variable in the UI
  # but it might be better to template the pipeline more and have a different pipeline file
  # so that someone doesn't pick the wrong var in the dropdown
  - name: project
    value: application
  # same comment as above ^^
  - name: serviceConnection
    value: DTS-SHAREDSERVICES-${{ parameters.env }}-Video Hearings #OPS-APPROVAL-GATE-${{ parameters.env }}-ENVS

stages:

  - stage: 'Terraform_Plan_Dev'
    displayName: 'Terraform Plan Dev'
    jobs: 
    - job: 'Terraform_Plan_Dev'
      displayName: 'Terraform Plan Dev'
      pool:
        vmImage: 'ubuntu-latest'
      variables:
        - group: vh-tenant-creds
      steps:
      - template: pipeline-steps/vh-tenant-replacement.yaml
        parameters:
          vh_tenant_id: $(vh_tenant_id)
          vh_client_secret: $(vh_client_secret)
          vh_client_id: $(vh_client_id)
          environment: DEV

      - template: pipeline-steps/terraform-validate.yaml
        parameters:
          environment: ${{ parameters.env }}
          terraformPath: $(Build.SourcesDirectory)/terraform
          tfversion: $(tfversion)
          location: ${{ parameters.location }}
          stack: '09-video-hearing-core'
          project: $(project)
          product: 'vh'
          builtFrom: $(Build.Repository.Name)
          serviceConnection: $(serviceConnection)
          activity_name: Video_Hearing_Core
          run_stage: ${{ parameters.Run_Stage }}
          state_sub: $(vh_tf_state_sub)